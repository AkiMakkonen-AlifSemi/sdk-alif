#Copyright(C) 2023 Alif Semiconductor - All Rights Reserved.
#Use, distribution and modification of this code is permitted under the
#terms stated in the Alif Semiconductor Software License Agreement
#
#You should have received a copy of the Alif Semiconductor Software
#License Agreement with this file.If not, please write to:
#contact @alifsemi.com, or visit : https: // alifsemi.com/license

menu "Alif Bluetooth LE Audio Broadcast Source"

config BLE_DEVICE_NAME
	string "BLE device name"
	default "ALIF_ZEPHYR"
	help
	  Device name to be included in advertising packets

config BROADCAST_NAME
	string "LE audio broadcast name"
	default "ALIF_LE_AUDIO"

config BROADCAST_SOURCE_MONO
	bool "Broadcast source mono mode"
	help
		In mono mode the application will only record a single (left) channel from the I2S, encode
		this channel once, but send out the encoded SDUs on both left and right broadcast
		isochronous streams.

		This means that to a sink device it appears as though both left and right channels are
		present, which is sometimes required for compatibility.

		But only one LC3 encoder is needed which saves on memory and runtime, plus this could also
		be useful in a case where the source of the audio data (e.g. microphone) only outputs a
		single channel.

config LE_AUDIO_PRESENTATION_DELAY_MS
	int "Presentation delay in ms"
	default 40
	help
	  LE audio presentation delay in ms. For the audio source use-case, this is defined as the
	  time in ms from the start of recording an audio frame, to the SDU reference anchor point
	  at which the SDU containing the same audio frame is sent over BLE. The absolute minimum
	  possible presentation delay would be the frame length (10 ms) plus the encoding time of
	  the frame, since it is impossible to send the frame before it has been fully recorded and
	  encoded. But some margin should be added on top of this to account for any overhead and
	  timing variations due to other activities of the software occurring while recording and
	  encoding the audio.

choice
	prompt "Choose audio sampling frequency"
	default LE_AUDIO_SAMPLING_FREQUENCY_48KHZ

	config LE_AUDIO_SAMPLING_FREQUENCY_8KHZ
	bool "8 kHz"
	config LE_AUDIO_SAMPLING_FREQUENCY_16KHZ
	bool "16 kHz"
	config LE_AUDIO_SAMPLING_FREQUENCY_24KHZ
	bool "24 kHz"
	config LE_AUDIO_SAMPLING_FREQUENCY_32KHZ
	bool "32 kHz"
	config LE_AUDIO_SAMPLING_FREQUENCY_48KHZ
	bool "48 kHz"

endchoice

config LE_AUDIO_SAMPLING_FREQUENCY_HZ
	int
	default 8000 if LE_AUDIO_SAMPLING_FREQUENCY_8KHZ
	default 16000 if LE_AUDIO_SAMPLING_FREQUENCY_16KHZ
	default 24000 if LE_AUDIO_SAMPLING_FREQUENCY_24KHZ
	default 32000 if LE_AUDIO_SAMPLING_FREQUENCY_32KHZ
	default 48000 if LE_AUDIO_SAMPLING_FREQUENCY_48KHZ

choice
	prompt "Choose size of each encoded audio frame in bytes"
	default LE_AUDIO_OCTETS_PER_CODEC_FRAME_100
	help
	  The number of bytes in each encoded audio frame. This is used to determine how much the
	  audio data needs to be compressed by the codec. For example if audio is sampled at 48 kHz,
	  each audio sample is 16 bits (2 bytes), and the frame duration is 10 ms, then the number of
	  bytes per "raw" audio frame is (48000 / 100) * 2 = 960 bytes. If the encoded audio frame is
	  100 bytes, then the data is compressed by a factor of 960 / 100 = 9.6. This choice is a
	  trade-off between audio quality and the air-time and resources used by the stream.

	config LE_AUDIO_OCTETS_PER_CODEC_FRAME_30
	bool "30"
	config LE_AUDIO_OCTETS_PER_CODEC_FRAME_40
	bool "40"
	config LE_AUDIO_OCTETS_PER_CODEC_FRAME_60
	bool "60"
	config LE_AUDIO_OCTETS_PER_CODEC_FRAME_80
	bool "80"
	config LE_AUDIO_OCTETS_PER_CODEC_FRAME_100
	bool "100"
	config LE_AUDIO_OCTETS_PER_CODEC_FRAME_120
	bool "120"
	config LE_AUDIO_OCTETS_PER_CODEC_FRAME_155
	bool "155"
endchoice

config LE_AUDIO_OCTETS_PER_CODEC_FRAME
	int
	default 30 if LE_AUDIO_OCTETS_PER_CODEC_FRAME_30
	default 40 if LE_AUDIO_OCTETS_PER_CODEC_FRAME_40
	default 60 if LE_AUDIO_OCTETS_PER_CODEC_FRAME_60
	default 80 if LE_AUDIO_OCTETS_PER_CODEC_FRAME_80
	default 100 if LE_AUDIO_OCTETS_PER_CODEC_FRAME_100
	default 120 if LE_AUDIO_OCTETS_PER_CODEC_FRAME_120
	default 155 if LE_AUDIO_OCTETS_PER_CODEC_FRAME_155
choice
	prompt "Choose number of LE audio retransmissions"
	default LE_AUDIO_RTN_4
	help
	  Max number of retransmissions of each frame. A higher number will give a higher probabilty
	  of the frame being received successfully, but also uses more air-time. The controller uses
	  this value as a suggestion and may choose a different value depending on other constraints

	config LE_AUDIO_RTN_2
	bool "2"
	config LE_AUDIO_RTN_4
	bool "4"
endchoice

config LE_AUDIO_RTN
	int
	default 2 if LE_AUDIO_RTN_2
	default 4 if LE_AUDIO_RTN_4

choice
	prompt "Choose LE audio max transport latency"
	default LE_AUDIO_MAX_TLATENCY_10
	help
	  The max transport latency effectively specifies the length of time during which an SDU may
	  be retransmitted. A higher value will lead to a large end-to-end audio latency, since the
	  receiver must wait for the last time slot at which the frame can be received before the
	  frame can be rendered (even if it already received an earlier transmission of the frame).
	  But a higher value also results in higher reliability due to the time diversity of frame
	  retransmissions.

	config LE_AUDIO_MAX_TLATENCY_10
	bool "10 ms"
	config LE_AUDIO_MAX_TLATENCY_20
	bool "20 ms"
endchoice

config LE_AUDIO_MAX_TLATENCY
	int
	default 10 if LE_AUDIO_MAX_TLATENCY_10
	default 20 if LE_AUDIO_MAX_TLATENCY_20

menu "Logging"

module = MAIN
module-str = main
source "subsys/logging/Kconfig.template.log_config"

module = BROADCAST_SOURCE
module-str = broadcast_source
source "subsys/logging/Kconfig.template.log_config"

endmenu # "Logging"

endmenu # "Alif Bluetooth LE Audio Broadcast Source"

source "Kconfig.zephyr"